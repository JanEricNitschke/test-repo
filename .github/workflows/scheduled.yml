on:
  push:
    branches: [main]
  schedule:
    - cron: "49 1 * * *"
  workflow_dispatch:

env:
  SOURCE2_VIEWER_URL: https://github.com/ValveResourceFormat/ValveResourceFormat/releases/download/11.1/cli-windows-x64.zip
  CS2_APP_ID: 730

permissions:
  contents: write

jobs:
  test_schedule:
    runs-on: windows-latest
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Setup steamcmd
        uses: CyberAndrii/setup-steamcmd@v1
      - name: Check if there is a need to update.
        id: check_time
        env:
          PYTHONIOENCODING: "utf-8"
        run: |
          pip install vdf
          python check_regeneration_needed.py
        continue-on-error: true  # Continue the workflow regardless of the exit code
      - name: Install CS2
        if: steps.check_time.outcome == 'success'
        run: |
          $csDir = Join-Path (Get-Location) "cs_go"
          steamcmd +force_install_dir $csDir +login anonymous +app_update ${{ env.CS2_APP_ID }} +quit
      - name: Install Source2Viewer-CLI
        if: steps.check_time.outcome == 'success'
        run: |
          Invoke-WebRequest -Uri ${{ env.SOURCE2_VIEWER_URL }} -OutFile ".\cli-windows-x64.zip"
          Expand-Archive -Path .\cli-windows-x64.zip -DestinationPath . -Force
      - name: Extract vents
        if: steps.check_time.outcome == 'success'
        run: |
          Get-ChildItem -Force
          ./generate-map-spawns.ps1
      - name: No update necessary, but code ran fine
        if: steps.check_time.outcome == 'failure'
        run: |
          echo "No action was needed, skipped regeneration."
      - name: Commit regenerated files
        if: steps.check_time.outcome == 'success'
        run: |
          git config --global user.name 'Jan-Eric Nitschke'
          git config --global user.email 'JanEricNitschke@users.noreply.github.com'
          git add *.json last_run_time.txt
          git commit -am "Automated changes."
          git push
